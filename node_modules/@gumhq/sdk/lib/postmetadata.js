"use strict";
exports.__esModule = true;
exports.PostMetadata = exports.Text = exports.Json = exports.Video = exports.Image = exports.Blocks = void 0;
var Blocks = /** @class */ (function () {
    function Blocks(data) {
        Object.assign(this, data);
    }
    return Blocks;
}());
exports.Blocks = Blocks;
var Image = /** @class */ (function () {
    function Image(data) {
        Object.assign(this, data);
    }
    return Image;
}());
exports.Image = Image;
var Video = /** @class */ (function () {
    function Video(data) {
        Object.assign(this, data);
    }
    return Video;
}());
exports.Video = Video;
var Json = /** @class */ (function () {
    function Json(data) {
        Object.assign(this, data);
    }
    return Json;
}());
exports.Json = Json;
var Text = /** @class */ (function () {
    function Text(data) {
        Object.assign(this, data);
    }
    return Text;
}());
exports.Text = Text;
var PostMetadata = /** @class */ (function () {
    function PostMetadata(data) {
        Object.assign(this, data);
        this.validate();
    }
    PostMetadata.prototype.validate = function () {
        if (!this.content || !this.type || !this.authorship) {
            throw new Error("Missing required fields in PostMetadata");
        }
        if (typeof this.content !== "object" ||
            (typeof this.image_preview !== "string" && typeof this.image_preview !== "undefined") ||
            typeof this.text_preview !== "string" && typeof this.text_preview !== "undefined" ||
            typeof this.authorship !== "object" ||
            (typeof this.contentDigest !== "string" && typeof this.contentDigest !== "undefined") ||
            (typeof this.signatureEncoding !== "string" && typeof this.signatureEncoding !== "undefined") ||
            (typeof this.digestEncoding !== "string" && typeof this.digestEncoding !== "undefined") ||
            (typeof this.parentDigest !== "string" && typeof this.parentDigest !== "undefined"))
            throw new Error("Invalid type for fields in PostMetadata");
        if (this.type !== "blocks" && this.type !== "image" && this.type !== "video" && this.type !== "json" && this.type !== "text") {
            throw new Error("Invalid type fields for PostMetadata. Must be one of 'blocks', 'image', 'video', 'json', or 'text'");
        }
        if (this.type === "blocks" && !(new Blocks(this.content) instanceof Blocks))
            throw new Error("Invalid content for PostMetadata. Expected type 'blocks'");
        if (this.type === "image" && !(new Image(this.content) instanceof Image))
            throw new Error("Invalid content for PostMetadata. Expected type 'image'");
        if (this.type === "video" && !(new Video(this.content) instanceof Video))
            throw new Error("Invalid content for PostMetadata. Expected type 'video'");
        if (this.type === "json" && !(new Json(this.content) instanceof Json))
            throw new Error("Invalid content for PostMetadata. Expected type 'json'");
        if (this.type === "text" && !(new Text(this.content) instanceof Text))
            throw new Error("Invalid content for PostMetadata. Expected type 'text'");
        return true;
    };
    return PostMetadata;
}());
exports.PostMetadata = PostMetadata;
