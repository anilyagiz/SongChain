import { SDK } from ".";
import * as anchor from "@project-serum/anchor";
export type ReactionType = "Like" | "Dislike" | "Love" | "Haha" | "Wow" | "Sad" | "Angry";
export interface GraphQLReaction {
    fromprofile: string;
    topost: string;
    reactiontype: string;
    cl_pubkey: string;
}
export declare class Reaction {
    readonly sdk: SDK;
    constructor(sdk: SDK);
    get(reactionAccount: anchor.web3.PublicKey): Promise<{
        [x: string]: any;
    }>;
    create(fromProfileAccount: anchor.web3.PublicKey, toPostAccount: anchor.web3.PublicKey, reactionType: ReactionType, userAccount: anchor.web3.PublicKey, owner: anchor.web3.PublicKey): Promise<{
        instructionMethodBuilder: import("@project-serum/anchor/dist/cjs/program/namespace/methods").MethodsBuilder<anchor.Idl, import("@project-serum/anchor/dist/cjs/idl").IdlInstruction & {
            name: string;
        }>;
        reactionPDA: anchor.web3.PublicKey;
    }>;
    delete(reactionAccount: anchor.web3.PublicKey, toPostAccount: anchor.web3.PublicKey, fromProfileAccount: anchor.web3.PublicKey, userAccount: anchor.web3.PublicKey, owner: anchor.web3.PublicKey): import("@project-serum/anchor/dist/cjs/program/namespace/methods").MethodsBuilder<anchor.Idl, import("@project-serum/anchor/dist/cjs/idl").IdlInstruction & {
        name: string;
    }>;
    getAllReactions(): Promise<GraphQLReaction[]>;
    getReactionsByPost(postAccount: anchor.web3.PublicKey): Promise<GraphQLReaction[]>;
}
//# sourceMappingURL=reaction.d.ts.map